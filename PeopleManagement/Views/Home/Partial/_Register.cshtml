@model PeopleManagement.Models.UserModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";

    string urlAction = "Register";

    if (Model != null && Model.IsEdit)
    {
        urlAction = "Update";
    }
}

<div class="row justify-content-md-center">
    <div class="col-md-5">
        @using (@Html.BeginForm(@urlAction, "Home", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="card">
                <div class="card-header">
                    <div class="card-title"><h1>Register Form</h1></div>
                </div>
                <div class="card-body">
                    @Html.HiddenFor(m => m.UserId)
                    <div class="form-group">
                        @Html.LabelFor(m => m.NRIC)
                        @Html.TextBoxFor(m => m.NRIC, new { @class = "form-control", @placeholder = "NRIC" })
                        @Html.ValidationMessageFor(m => m.NRIC, "", new { @class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Name)
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Full Name" })
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div>
                            @Html.LabelFor(m => m.Gender)
                        </div>
                        <div class="col-md-6">
                            @Html.Label("Male")
                            @Html.RadioButtonFor(model => model.Gender, "M")
                        </div>
                        <div class="col-md-6">
                            @Html.Label("Female")
                            @Html.RadioButtonFor(model => model.Gender, "F")
                        </div>

                        @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Birthday)
                        @Html.TextBoxFor(m => m.Birthday, new { @class = "form-control datepicker", @placeholder = "birthday" })
                        @Html.ValidationMessageFor(m => m.Birthday, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.AvaiableDate)
                        @Html.TextBoxFor(m => m.AvaiableDate, new { @class = "form-control datepicker", @placeholder = "Avaiable Date" })
                    </div>
                    <div class="form-group">
                        <div>
                            @Html.LabelFor(m => m.Subjects)
                        </div>
                        @for (int i = 0; i < Model.Subjects.Count; i++)
                        {
                        <div class="col-md-2">
                            @Html.CheckBoxFor(m => m.Subjects[i].IsChecked, new { })<label>@Model.Subjects[i].SubjectName</label>
                            @Html.HiddenFor(x => x.Subjects[i].Id)
                            @Html.HiddenFor(x => x.Subjects[i].SubjectName)
                        </div>                          
                        }
                    </div>
                    <div class="form-group">
                        <input type="submit" name="submit" class="btn btn-danger" value="Register" />
                    </div>
                </div>
            </div>

        }
    </div>
</div>
